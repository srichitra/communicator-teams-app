/**
 * Copyright(c) Microsoft Corporation.All rights reserved.
 * Licensed under the MIT License.
 */
import { z } from 'zod';
import { MessagingExtensionParameter } from './messagingExtensionParameter';
import { MessagingExtensionQueryOptions } from './messagingExtensionQueryOptions';
/**
 * Represents a query for a messaging extension.
 */
export interface MessagingExtensionQuery {
    /**
     * The ID of the command.
     */
    commandId?: string;
    /**
     * A list of parameters for the query.
     */
    parameters?: MessagingExtensionParameter[];
    /**
     * Options for the query.
     */
    queryOptions?: MessagingExtensionQueryOptions;
    /**
     * The state of the query.
     */
    state?: string;
}
/**
 * Zod schema for validating MessagingExtensionQuery.
 */
export declare const messagingExtensionQueryZodSchema: z.ZodObject<{
    commandId: z.ZodOptional<z.ZodString>;
    parameters: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        value: z.ZodOptional<z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        value?: any;
        name?: string | undefined;
    }, {
        value?: any;
        name?: string | undefined;
    }>, "many">>;
    queryOptions: z.ZodOptional<z.ZodObject<{
        skip: z.ZodOptional<z.ZodNumber>;
        count: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        skip?: number | undefined;
        count?: number | undefined;
    }, {
        skip?: number | undefined;
        count?: number | undefined;
    }>>;
    state: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    commandId?: string | undefined;
    parameters?: {
        value?: any;
        name?: string | undefined;
    }[] | undefined;
    queryOptions?: {
        skip?: number | undefined;
        count?: number | undefined;
    } | undefined;
    state?: string | undefined;
}, {
    commandId?: string | undefined;
    parameters?: {
        value?: any;
        name?: string | undefined;
    }[] | undefined;
    queryOptions?: {
        skip?: number | undefined;
        count?: number | undefined;
    } | undefined;
    state?: string | undefined;
}>;
