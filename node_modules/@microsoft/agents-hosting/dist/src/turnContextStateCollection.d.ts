/**
 * A collection for managing state within a turn context.
 */
export declare class TurnContextStateCollection extends Map<any, any> {
    /**
     * Gets the value associated with the specified key.
     * @param key The key of the element to get.
     * @returns The element associated with the specified key, or undefined if the key does not exist.
     */
    get<T = any>(key: any): T;
    /**
     * Gets the value associated with the specified key.
     * @param key The key of the element to get.
     * @returns The element associated with the specified key, or undefined if the key does not exist.
     */
    get(key: any): any;
    /**
     * Pushes a value onto the stack for the specified key.
     * @param key The key of the element to push.
     * @param value The value to push onto the stack.
     */
    push(key: any, value: any): void;
    /**
     * Pops a value from the stack for the specified key.
     * @param key The key of the element to pop.
     * @returns The value that was popped from the stack.
     */
    pop(key: any): any;
}
