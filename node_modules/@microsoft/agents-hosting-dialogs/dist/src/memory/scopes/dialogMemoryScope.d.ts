/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { MemoryScope } from './memoryScope';
import { DialogContext } from '../../dialogContext';
export declare class DialogMemoryScope extends MemoryScope {
    /**
       * Initializes a new instance of the DialogMemoryScope class.
       */
    constructor();
    /**
       * Gets the backing memory for this scope.
       *
       * @param dialogContext The DialogContext object for this turn.
       * @returns The memory for the scope.
       */
    getMemory(dialogContext: DialogContext): object;
    /**
       * Changes the backing object for the memory scope.
       *
       * @param dialogContext The DialogContext object for this turn.
       * @param memory Memory object to set for the scope.
       */
    setMemory(dialogContext: DialogContext, memory: object): void;
    /**
       * @private
       * @param dialogContext The DialogContext object for this turn.
       * @returns A boolean indicating whether is a cointainer or not.
       */
    private isContainer;
}
