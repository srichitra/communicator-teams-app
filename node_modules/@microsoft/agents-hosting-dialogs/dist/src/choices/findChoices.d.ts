/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { FindValuesOptions } from './findValues';
import { ModelResult } from './modelResult';
import { Choice } from './choice';
export interface FindChoicesOptions extends FindValuesOptions {
    noValue?: boolean;
    noAction?: boolean;
    recognizeNumbers?: boolean;
    recognizeOrdinals?: boolean;
}
export interface FoundChoice {
    value: string;
    index: number;
    score: number;
    synonym?: string;
}
/**
 * Mid-level search function for recognizing a choice in an utterance.
 *
 * @param utterance The text or user utterance to search over. For an incoming 'message' activity you can simply use `context.activity.text`.
 * @param choices List of choices to search over.
 * @param options (Optional) options used to tweak the search that's performed.
 * @returns A list of found choices, sorted by most relevant first.
 */
export declare function findChoices(utterance: string, choices: (string | Choice)[], options?: FindChoicesOptions): ModelResult<FoundChoice>[];
