/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { AgentStatePropertyAccessor, TurnContext } from '@microsoft/agents-hosting';
import { Dialog } from './dialog';
import { DialogContext, DialogState } from './dialogContext';
import { DialogStateManagerConfiguration } from './memory';
import { DialogTurnResult } from './dialogTurnResult';
/**
 * Runs a dialog from a given context and accessor.
 *
 * @param dialog The Dialog to run.
 * @param context TurnContext object for the current turn of conversation with the user.
 * @param accessor Defined methods for accessing the state property created in a State object.
 */
export declare function runDialog(dialog: Dialog, context: TurnContext, accessor: AgentStatePropertyAccessor<DialogState>): Promise<void>;
/**
 * @param context The TurnContext for the turn.
 * @param dialogId The dialog ID.
 * @param dialogContext The DialogContext for the current turn of conversation.
 * @param dialogStateManagerConfiguration Configuration for the dialog state manager.
 * @returns {Promise<DialogTurnResult>} a promise resolving to the dialog turn result.
 */
export declare function internalRun(context: TurnContext, dialogId: string, dialogContext: DialogContext, dialogStateManagerConfiguration?: DialogStateManagerConfiguration): Promise<DialogTurnResult>;
/**
 * Recursively walk up the dialog context stack to find the active DC.
 *
 * @param dialogContext DialogContext for the current turn of conversation with the user.
 * @returns Active DialogContext.
 */
export declare function getActiveDialogContext(dialogContext: DialogContext): DialogContext;
