import{jwtDecode as e}from"jwt-decode";import{app as t,authentication as o}from"@microsoft/teams-js";import{PublicClientApplication as r}from"@azure/msal-browser";import n from"axios";var i,s;!function(e){e.InvalidParameter="InvalidParameter",e.InvalidConfiguration="InvalidConfiguration",e.InvalidCertificate="InvalidCertificate",e.InternalError="InternalError",e.ChannelNotSupported="ChannelNotSupported",e.FailedToRetrieveSsoToken="FailedToRetrieveSsoToken",e.FailedToProcessSsoHandler="FailedToProcessSsoHandler",e.CannotFindCommand="CannotFindCommand",e.FailedToRunSsoStep="FailedToRunSsoStep",e.FailedToRunDedupStep="FailedToRunDedupStep",e.SsoActivityHandlerIsUndefined="SsoActivityHandlerIsUndefined",e.RuntimeNotSupported="RuntimeNotSupported",e.ConsentFailed="ConsentFailed",e.UiRequiredError="UiRequiredError",e.TokenExpiredError="TokenExpiredError",e.ServiceError="ServiceError",e.FailedOperation="FailedOperation",e.InvalidResponse="InvalidResponse",e.AuthorizationInfoAlreadyExists="AuthorizationInfoAlreadyExists"}(i||(i={}));class a{}a.InvalidConfiguration="{0} in configuration is invalid: {1}.",a.ConfigurationNotExists="Configuration does not exist. {0}",a.ResourceConfigurationNotExists="{0} resource configuration does not exist.",a.MissingResourceConfiguration="Missing resource configuration with type: {0}, name: {1}.",a.AuthenticationConfigurationNotExists="Authentication configuration does not exist.",a.BrowserRuntimeNotSupported="{0} is not supported in browser.",a.NodejsRuntimeNotSupported="{0} is not supported in Node.",a.FailToAcquireTokenOnBehalfOfUser="Failed to acquire access token on behalf of user: {0}",a.OnlyMSTeamsChannelSupported="{0} is only supported in MS Teams Channel",a.FailedToProcessSsoHandler="Failed to process sso handler: {0}",a.FailedToRetrieveSsoToken="Failed to retrieve sso token, user failed to finish the AAD consent flow.",a.CannotFindCommand="Cannot find command: {0}",a.FailedToRunSsoStep="Failed to run dialog to retrieve sso token: {0}",a.FailedToRunDedupStep="Failed to run dialog to remove duplicated messages: {0}",a.SsoActivityHandlerIsNull="Sso command can only be used or added when sso activity handler is not undefined",a.AuthorizationHeaderAlreadyExists="Authorization header already exists!",a.BasicCredentialAlreadyExists="Basic credential already exists!",a.EmptyParameter="Parameter {0} is empty",a.DuplicateHttpsOptionProperty="Axios HTTPS agent already defined value for property {0}",a.DuplicateApiKeyInHeader="The request already defined api key in request header with name {0}.",a.DuplicateApiKeyInQueryParam="The request already defined api key in query parameter with name {0}.",a.OnlySupportInQueryActivity="The handleMessageExtensionQueryWithToken only support in handleTeamsMessagingExtensionQuery with composeExtension/query type.",a.OnlySupportInLinkQueryActivity="The handleMessageExtensionLinkQueryWithSSO only support in handleTeamsAppBasedLinkQuery with composeExtension/queryLink type.";class u extends Error{constructor(e,t){if(!t)return super(e),this;super(e),Object.setPrototypeOf(this,u.prototype),this.name=`${new.target.name}.${t}`,this.code=t}}function d(e){c.level=e}function p(){return c.level}!function(e){e[e.Verbose=0]="Verbose",e[e.Info=1]="Info",e[e.Warn=2]="Warn",e[e.Error=3]="Error"}(s||(s={}));const c=new class{constructor(e,t){this.level=void 0,this.defaultLogger={verbose:console.debug,info:console.info,warn:console.warn,error:console.error},this.name=e,this.level=t}error(e){this.log(s.Error,(e=>e.error),e)}warn(e){this.log(s.Warn,(e=>e.warn),e)}info(e){this.log(s.Info,(e=>e.info),e)}verbose(e){this.log(s.Verbose,(e=>e.verbose),e)}log(e,t,o){if(""===o.trim())return;const r=(new Date).toUTCString();let n;n=this.name?`[${r}] : @microsoft/teamsfx - ${this.name} : ${s[e]} - `:`[${r}] : @microsoft/teamsfx : ${s[e]} - `;const i=`${n}${o}`;void 0!==this.level&&this.level<=e&&(this.customLogger?t(this.customLogger)(i):this.customLogFunction?this.customLogFunction(e,i):t(this.defaultLogger)(i))}};function l(e){c.customLogger=e}function m(e){c.customLogFunction=e}function h(t){try{const o=e(t);if(!o||!o.exp)throw new u("Decoded token is null or exp claim does not exists.",i.InternalError);return o}catch(e){const t="Parse jwt token failed in node env with error: "+e.message;throw c.error(t),new u(t,i.InternalError)}}function w(e,...t){const o=t;return e.replace(/{(\d+)}/g,(function(e,t){return void 0!==o[t]?o[t]:e}))}function S(e){if("string"==typeof e||e instanceof String)return;if(Array.isArray(e)&&0===e.length)return;if(Array.isArray(e)&&e.length>0&&e.every((e=>"string"==typeof e)))return;const t="The type of scopes is not valid, it must be string or string array";throw c.error(t),new u(t,i.InvalidParameter)}class f{constructor(e){throw new u(w(a.BrowserRuntimeNotSupported,"AppCredential"),i.RuntimeNotSupported)}getToken(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"AppCredential"),i.RuntimeNotSupported))}}class g{constructor(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"OnBehalfOfUserCredential"),i.RuntimeNotSupported)}getToken(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"OnBehalfOfUserCredential"),i.RuntimeNotSupported))}getUserInfo(){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"OnBehalfOfUserCredential"),i.RuntimeNotSupported))}}class R{constructor(e){c.info("Create teams user credential"),this.config=this.loadAndValidateConfig(e),this.ssoToken=null,this.initialized=!1}async login(e,r){S(e);const n="string"==typeof e?e:e.join(" ");let s;c.info(`Popup login page to get user's access token with scopes: ${n}`),this.initialized||await this.init(r),await t.initialize();try{const e={url:`${this.config.initiateLoginEndpoint?this.config.initiateLoginEndpoint:""}?clientId=${this.config.clientId?this.config.clientId:""}&scope=${encodeURI(n)}&loginHint=${this.loginHint?this.loginHint:""}`,width:600,height:535};if(s=await o.authenticate(e),!s){const e="Get empty authentication result from MSAL";throw c.error(e),new u(e,i.InternalError)}}catch(e){const t=`Consent failed for the scope ${n} with error: ${e.message}`;throw c.error(t),new u(t,i.ConsentFailed)}let a={};try{a="string"==typeof s?JSON.parse(s):s}catch(e){const t="Failed to parse response to Json.";throw c.error(t),new u(t,i.InvalidResponse)}if(a.code){const e=`Found auth code in response. Auth code is not support for current version of SDK. Please refer to the help link for how to fix the issue: ${"https://aka.ms/teamsfx-auth-code-flow"}.`;throw c.error(e),new u(e,i.InvalidResponse)}a.sessionStorage&&this.setSessionStorage(a.sessionStorage)}async getToken(e,t){S(e);const o=null==t?void 0:t.resources,r=await this.getSSOToken(o),n="string"==typeof e?e:e.join(" ");if(""===n)return c.info("Get SSO token"),r;{let t;c.info("Get access token with scopes: "+n),this.initialized||await this.init(o);const r="string"==typeof e?e.split(" "):e,s=window.location.origin;try{const e=this.msalInstance.getAccountByUsername(this.loginHint),o={scopes:r,account:null!=e?e:void 0,redirectUri:`${s}/blank-auth-end.html`};t=await this.msalInstance.acquireTokenSilent(o)}catch(e){const t=`Failed to call acquireTokenSilent. Reason: ${null==e?void 0:e.message}. `;c.verbose(t)}if(!t)try{const e={scopes:r,loginHint:this.loginHint,redirectUri:`${s}/blank-auth-end.html`};t=await this.msalInstance.ssoSilent(e)}catch(e){const t=`Failed to call ssoSilent. Reason: ${null==e?void 0:e.message}. `;c.verbose(t)}if(!t){const e="Failed to get access token cache silently, please login first: you need login first before get access token.";throw c.error(e),new u(e,i.UiRequiredError)}const a=function(e){try{const t="string"==typeof e?JSON.parse(e):e;if(!t||!t.accessToken){const e="Get empty access token from Auth Code token response.";throw c.error(e),new Error(e)}const o=t.accessToken,r=h(o);if("1.0"!==r.ver&&"2.0"!==r.ver){const e="SSO token is not valid with an unknown version: "+r.ver;throw c.error(e),new Error(e)}return{token:o,expiresOnTimestamp:1e3*r.exp}}catch(e){const t="Parse access token failed from Auth Code token response in node env with error: "+e.message;throw c.error(t),new u(t,i.InternalError)}}(t);return a}}async getUserInfo(e){c.info("Get basic user info from SSO token");return function(e){if(!e){const e="SSO token is undefined.";throw c.error(e),new u(e,i.InvalidParameter)}const t=h(e),o={displayName:t.name,objectId:t.oid,tenantId:t.tid,preferredUserName:""};return"2.0"===t.ver?o.preferredUserName=t.preferred_username:"1.0"===t.ver&&(o.preferredUserName=t.upn),o}((await this.getSSOToken(e)).token)}async init(e){const t=function(e){if(!e){const e="SSO token is undefined.";throw c.error(e),new u(e,i.InvalidParameter)}const t=h(e);return{tid:t.tid,loginHint:"2.0"===t.ver?t.preferred_username:t.upn}}((await this.getSSOToken(e)).token);this.loginHint=t.loginHint,this.tid=t.tid;const o={auth:{clientId:this.config.clientId,authority:`https://login.microsoftonline.com/${this.tid}`},cache:{cacheLocation:"sessionStorage"}};this.msalInstance=new r(o),await this.msalInstance.initialize(),this.initialized=!0}async getSSOToken(e){if(this.ssoToken&&this.ssoToken.expiresOnTimestamp-Date.now()>3e5)return c.verbose("Get SSO token from memory cache"),this.ssoToken;const r={resources:null!=e?e:[]};let n;try{await t.initialize()}catch(e){const t="Initialize teams sdk failed due to not running inside Teams environment";throw c.error(t),new u(t,i.InternalError)}try{n=await o.getAuthToken(r)}catch(e){const t="Get SSO token failed with error: "+e.message;throw c.error(t),new u(t,i.InternalError)}if(!n){const e="Get empty SSO token from Teams";throw c.error(e),new u(e,i.InternalError)}const s=h(n);if("1.0"!==s.ver&&"2.0"!==s.ver){const e="SSO token is not valid with an unknown version: "+s.ver;throw c.error(e),new u(e,i.InternalError)}const a={token:n,expiresOnTimestamp:1e3*s.exp};return this.ssoToken=a,a}loadAndValidateConfig(e){if(c.verbose("Validate authentication configuration"),e.initiateLoginEndpoint&&e.clientId)return e;const t=[];e.initiateLoginEndpoint||t.push("initiateLoginEndpoint"),e.clientId||t.push("clientId");const o=w(a.InvalidConfiguration,t.join(", "),"undefined");throw c.error(o),new u(o,i.InvalidConfiguration)}setSessionStorage(e){try{Object.keys(e).forEach((t=>{sessionStorage.setItem(t,e[t])}))}catch(e){const t=`Failed to set values in session storage. Error: ${e.message}`;throw c.error(t),new u(t,i.InternalError)}}}class N{constructor(e,t,o,r){throw new u(w(a.BrowserRuntimeNotSupported,"TeamsBotSsoPrompt"),i.RuntimeNotSupported)}beginDialog(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"TeamsBotSsoPrompt"),i.RuntimeNotSupported))}continueDialog(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"TeamsBotSsoPrompt"),i.RuntimeNotSupported))}}function B(e,t){const o=n.create({baseURL:e});return o.interceptors.request.use((async function(e){return await t.AddAuthenticationInfo(e)})),o}class y{constructor(e){this.getToken=e}async AddAuthenticationInfo(e){const t=await this.getToken();if(e.headers||(e.headers={}),e.headers.Authorization)throw new u(a.AuthorizationHeaderAlreadyExists,i.AuthorizationInfoAlreadyExists);return e.headers.Authorization=`Bearer ${t}`,e}}class v{constructor(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"BasicAuthProvider"),i.RuntimeNotSupported)}AddAuthenticationInfo(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"BasicAuthProvider"),i.RuntimeNotSupported))}}class C{constructor(e,t,o){throw new u(w(a.BrowserRuntimeNotSupported,"ApiKeyProvider"),i.RuntimeNotSupported)}AddAuthenticationInfo(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"ApiKeyProvider"),i.RuntimeNotSupported))}}var A,I,T,k,P;!function(e){e[e.Header=0]="Header",e[e.QueryParams=1]="QueryParams"}(A||(A={}));class E{constructor(e){throw new u(w(a.BrowserRuntimeNotSupported,"CertificateAuthProvider"),i.RuntimeNotSupported)}AddAuthenticationInfo(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"CertificateAuthProvider"),i.RuntimeNotSupported))}}function x(e,t,o){throw new u(w(a.BrowserRuntimeNotSupported,"createPemCertOption"),i.RuntimeNotSupported)}function F(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"createPfxCertOption"),i.RuntimeNotSupported)}!function(e){e.Channel="Channel",e.Group="Group",e.Person="Person"}(I||(I={})),function(e){e[e.ReplaceForInteractor=0]="ReplaceForInteractor",e[e.ReplaceForAll=1]="ReplaceForAll",e[e.NewForAll=2]="NewForAll"}(T||(T={})),function(e){e[e.BadRequest=400]="BadRequest",e[e.InternalServerError=500]="InternalServerError"}(k||(k={}));class j{constructor(e,t,o,...r){throw new u(w(a.BrowserRuntimeNotSupported,"BotSsoExecutionDialog"),i.RuntimeNotSupported)}addCommand(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"BotSsoExecutionDialog"),i.RuntimeNotSupported)}run(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"BotSsoExecutionDialog"),i.RuntimeNotSupported)}onEndDialog(e){throw new u(w(a.BrowserRuntimeNotSupported,"BotSsoExecutionDialog"),i.RuntimeNotSupported)}}function O(e,t,o,r,n){throw new u(w(a.BrowserRuntimeNotSupported,"queryWithToken in message extension"),i.RuntimeNotSupported)}!function(e){e[e.Person=1]="Person",e[e.Group=2]="Group",e[e.Channel=4]="Channel",e[e.All=7]="All"}(P||(P={}));var b=Object.freeze({__proto__:null,BotSsoExecutionDialog:j,CardActionBot:class{constructor(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"CardActionBot"),i.RuntimeNotSupported)}registerHandler(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"CardActionBot"),i.RuntimeNotSupported))}registerHandlers(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"CardActionBot"),i.RuntimeNotSupported))}},Channel:class{constructor(e,t){throw this.type=I.Channel,new u(w(a.BrowserRuntimeNotSupported,"Channel"),i.RuntimeNotSupported)}sendMessage(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"Channel"),i.RuntimeNotSupported))}sendAdaptiveCard(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"Channel"),i.RuntimeNotSupported))}},CommandBot:class{constructor(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"CommandBot"),i.RuntimeNotSupported)}registerCommand(e){throw new u(w(a.BrowserRuntimeNotSupported,"CommandBot"),i.RuntimeNotSupported)}registerCommands(e){throw new u(w(a.BrowserRuntimeNotSupported,"CommandBot"),i.RuntimeNotSupported)}registerSsoCommand(e){throw new u(w(a.BrowserRuntimeNotSupported,"CommandBot"),i.RuntimeNotSupported)}registerSsoCommands(e){throw new u(w(a.BrowserRuntimeNotSupported,"CommandBot"),i.RuntimeNotSupported)}},ConversationBot:class{constructor(e){throw new u(w(a.BrowserRuntimeNotSupported,"ConversationBot"),i.RuntimeNotSupported)}requestHandler(e,t,o){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"ConversationBot"),i.RuntimeNotSupported))}},Member:class{constructor(e,t){throw this.type=I.Person,new u(w(a.BrowserRuntimeNotSupported,"Member"),i.RuntimeNotSupported)}sendMessage(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"Member"),i.RuntimeNotSupported))}sendAdaptiveCard(e,t){return Promise.reject(Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"Member"),i.RuntimeNotSupported)))}},NotificationBot:class{constructor(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"NotificationBot"),i.RuntimeNotSupported)}static installations(){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"NotificationBot"),i.RuntimeNotSupported))}findMember(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"NotificationBot"),i.RuntimeNotSupported))}findChannel(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"NotificationBot"),i.RuntimeNotSupported))}findAllMembers(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"NotificationBot"),i.RuntimeNotSupported))}findAllChannels(e){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"NotificationBot"),i.RuntimeNotSupported))}},TeamsBotInstallation:class{constructor(e,t){throw new u(w(a.BrowserRuntimeNotSupported,"TeamsBotInstallation"),i.RuntimeNotSupported)}sendMessage(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"TeamsBotInstallation"),i.RuntimeNotSupported))}sendAdaptiveCard(e,t){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"TeamsBotInstallation"),i.RuntimeNotSupported))}channels(){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"TeamsBotInstallation"),i.RuntimeNotSupported))}members(){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"TeamsBotInstallation"),i.RuntimeNotSupported))}getTeamDetails(){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"TeamsBotInstallation"),i.RuntimeNotSupported))}},sendAdaptiveCard:function(e,t,o){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"sendAdaptiveCard"),i.RuntimeNotSupported))},sendMessage:function(e,t,o){return Promise.reject(new u(w(a.BrowserRuntimeNotSupported,"sendMessage"),i.RuntimeNotSupported))}});export{T as AdaptiveCardResponse,A as ApiKeyLocation,C as ApiKeyProvider,f as AppCredential,v as BasicAuthProvider,y as BearerTokenAuthProvider,b as BotBuilderCloudAdapter,j as BotSsoExecutionDialog,E as CertificateAuthProvider,i as ErrorCode,u as ErrorWithCode,k as InvokeResponseErrorCode,s as LogLevel,I as NotificationTargetType,g as OnBehalfOfUserCredential,N as TeamsBotSsoPrompt,R as TeamsUserCredential,B as createApiClient,x as createPemCertOption,F as createPfxCertOption,p as getLogLevel,O as handleMessageExtensionQueryWithSSO,m as setLogFunction,d as setLogLevel,l as setLogger};
//# sourceMappingURL=index.esm2017.js.map
